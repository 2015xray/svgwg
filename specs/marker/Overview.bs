<h1>SVG Marker Level 1</h1>
<pre class='metadata'>
Level: 1
Status: ED
ED: http://dev.w3.org/fxtf/motion-1/
Shortname: svg-markers
Group: svg
Editor: Cameron McCormack, Mozilla Corporation, cam@mcc.id.au
Abstract: Markers are graphical objects that are painted at particular positions along a <a element>path</a>, <a element>line</a>, <a element>polyline</a> or <a element>polygon</a> element.
</pre>
<pre class=link-defaults>
spec:svg2; type:element; text:svg
spec:css-transforms-1; type:property; text:transform
spec:css-transforms-1; type:type; text:<transform-list>
</pre>

<h2 id="introduction">Introduction</h2>

A marker is a graphical object that is painted at particular positions along
a <a element>path</a>, <a element>line</a>, <a element>polyline</a> or <a element>polygon</a>
element, together known as the <dfn external>markable elements</dfn>.  There are four ways
markers can be placed on these elements:

<ul>
  <li>The 'marker-start' and 'marker-end' properties
  can be used to place markers at the first and last vertex, and the
  'marker-mid' property can be used to place markers at every
  other vertex (aside from the first and last).  The 'marker-start' and
  'marker-end' can be used for example to add arrowheads to paths.
  Markers placed using these properties are known as
  <dfn>vertex markers</dfn>.</li>

  <li>The 'marker-segment' property can be used to place markers
  at the center of every path segment. These markers are known as
  <dfn external>segment markers</dfn>.</li>

  <li>The 'marker-pattern' property can be used to define
  a regular repeating pattern of markers to place along the length of the
  path.  Markers placed with 'marker-pattern' are known as
  <dfn external>repeating markers</dfn>.</li>

  <li>A child <a element>marker</a> element with a 'position' attribute
  can be used to place a marker at a particular location along the path.
  Such markers are known as <dfn external>positioned markers</dfn>.</li>
</ul>

ISSUE: There are probably better terms to use than "vertex" and
"segment" markers.  At least, "vertex" would go more naturally with "edge",
but we should use more natural sounding names.</p>

The graphics for a marker are defined by a <a element>marker</a> element.
The 'marker-start', 'marker-end', 'marker-mid',
'marker-segment' and 'marker-pattern' properties, together known
as the <dfn>marker properties</dfn>, reference
<a element>marker</a> elements.</p>

Markers can be animated, and as with <a>'use'</a> elements, the animated
effects will show on all current uses of the markers within the document.</p>

Markers on a given element are painted in the following order, from
bottom to top:

<ul>
  <li>any marker specified by 'marker-start'</li>

  <li>alternating 'marker-mid' and 'marker-segment' markers,
  in order of their position along the path</li>

  <li>any <a>repeating markers</a>, in order of their position along
  the path</li>

  <li>any <a>positioned markers</a>, in document order of the
  <a element>marker</a> element children</li>
</ul>

<h2 id="MarkerElement">The <a element>marker</a> element</h2>

<!--<edit:elementsummary name='marker'/>-->

The <a element>marker</a> element defines the graphics that are to
be used for drawing markers on a <a>markable element</a>.

<p id="MarkerAttributes"><em>Attribute definitions:</em></p>

<dl class="attrdef-list">
  <dt>

<table class="propdef attrdef">
  <tr>
    <th>Name</th>
    <th>Value</th>
    <th>Lacuna value</th>
    <th>Animatable</th>
  </tr>
  <tr>
    <td><dfn id="MarkerUnitsAttribute">markerUnits</dfn></td>
    <td>strokeWidth | userSpaceOnUse</td>
    <td>strokeWidth</td>
    <td>yes</td>
  </tr>
</table>

</dt>
<dd>

<p>The <a element-attr for=marker>'markerUnits'</a> attribute defines the coordinate system for
attributes <a element-attr for=marker>'markerWidth'</a>, <a element-attr for=marker>'markerHeight'</a> and the
contents of the <a element>marker</a>.  Values have the
following meanings:</p>

<dl>
  <dt><span class="attr-value">strokeWidth</span></dt>
  <dd><a>'markerWidth'</a>, <a>'markerHeight'</a> and the contents
  of the <a element>marker</a> represent values in a coordinate system
  which has a single unit equal the size in user units of the
  current stroke width (see the <a>'stroke-width'</a> property) in
  place for the graphic object referencing the marker.</dd>

  <dt><span class="attr-value">userSpaceOnUse</span></dt>
  <dd><a>'markerWidth'</a>, <a>'markerHeight'</a> and the contents
  of the <a element>marker</a> represent values in the current
  user coordinate system in place for the graphic object
  referencing the marker (i.e., the user coordinate system for
  the element referencing the <a element>marker</a> element via a
  <a>marker property</a>).</dd>
</dl>

</dd>
<dt>

<table class="propdef attrdef">
  <tr>
    <th>Name</th>
    <th>Value</th>
    <th>Lacuna value</th>
    <th>Animatable</th>
  </tr>
  <tr>
    <td><dfn id="MarkerWidthAttribute">markerWidth</dfn>,
    <dfn id="MarkerHeightAttribute">markerHeight</dfn></td>
    <td><a>&lt;length&gt;</a> | <a>&lt;percentage&gt;</a> | <a>&lt;number&gt;</a></td>
    <td>3</td>
    <td>yes</td>
  </tr>
</table>

</dt>
<dd>

<p>The <a>'markerWidth'</a> and <a>'markerHeight'</a> attributes
represent the size of the viewport into which the marker is to
be fitted according to the <a>'viewBox'</a> and <a>'preserveAspectRatio'</a>
attributes.  A value of zero for either
attribute results in nothing being rendered for the marker.  A negative value
for either attribute is an error (see
<a href="implnote.html#ErrorProcessing">Error processing</a>).</p>

</dd>
<dt>

<table class="propdef attrdef">
  <tr>
    <th>Name</th>
    <th>Value</th>
    <th>Lacuna value</th>
    <th>Animatable</th>
  </tr>
  <tr>
    <td><dfn id="MarkerElementRefXAttribute">refX</dfn></td>
    <td><a>&lt;length&gt;</a> | <a>&lt;percentage&gt;</a> | <a>&lt;number&gt;</a> | left | center | right</td>
    <td>0</td>
    <td>yes</td>
  </tr>
  <tr>
    <td><dfn id="MarkerElementRefYAttribute">refY</dfn></td>
    <td><a>&lt;length&gt;</a> | <a>&lt;percentage&gt;</a> | <a>&lt;number&gt;</a> | top | center | bottom</td>
    <td>0</td>
    <td>yes</td>
  </tr>
</table>

</dt>
<dd>

    <p class="note">
      New in SVG 2: geometric keywords (matches use in <a>'symbol'</a>).
    </p>
    <p class="annotation">
      We will add top/center/bottom, left/center/right keywords to
      refX/refY on marker/symbol. Resolved at
      <a href="http://www.w3.org/2014/08/26-svg-minutes.html#item07">London
      F2F</a>. Values inspired by
      <a href="http://www.w3.org/TR/css3-background/#the-background-position">'background-position'</a>.
    </p>

<p>The <a>'refX'</a> and <a>'refY'</a> attributes define the reference
point of the marker which is to be placed exactly at the marker's
position on the <a>markable element</a>.  They are interpreted as being in the
coordinate system of the marker contents, after application of the
<a>'viewBox'</a> and <a>'preserveAspectRatio'</a> attributes.</p>

</dd>
<dt>

<table class="propdef attrdef">
  <tr>
    <th>Name</th>
    <th>Value</th>
    <th>Lacuna value</th>
    <th>Animatable</th>
  </tr>
  <tr>
    <td><dfn id="OrientAttribute">orient</dfn></td>
    <td>auto | auto-start-reverse | <a>&lt;angle&gt;</a> | <a>&lt;number&gt;</a></td>
    <td>0</td>
    <td>yes&#160;(non-additive)</td>
  </tr>
</table>

</dt>
<dd>

<p>The <a>'orient'</a> attribute indicates how the marker
is rotated when it is placed at its position on the <a>markable element</a>.
Values have the following meaning:</p>

<dl>
  <dt><span class="attr-value">'auto'</span></dt>
  <dd>
    <p>A value of <span class="attr-value">'auto'</span>
    indicates that the marker is oriented such that its positive
    x-axis is pointing in the direction of the path at the point
    it is placed.</p>

    <p class="issue">This needs to reference a definition for how
    directionality of a given start/mid/end vertex is calculated.
    Part of that (which should be moved somewhere more appropriate) is in 
    the <a href="implnote.html#PathElementImplementationNotes">path element implementation notes</a>.
    Some wording from SVG 1.1 appears to have been lost, compare with <a href="http://www.w3.org/TR/SVG11/painting.html#OrientAttribute">this</a>.
	<br/><br/>
    Here's an example that is a bit unclear currently:
    <code style="white-space:pre">
&lt;svg>
  &lt;marker id="m" orient="auto" overflow="visible">
    &lt;rect x="-1" y="-0.5" width="1" height="1" fill="green"/>
  &lt;/marker>
  &lt;path d="M50,0C50,50 50,100 50,100" marker-end="url(#m)" stroke-width="100" stroke="red"/>
&lt;/svg>
	</code>
	<br/>
	The second control point and the endpoint coincide, should this mean that the direction of the endpoint is a) <em>unknown [aka default to 0 degrees]</em> or 
	b) <em>that you have to look at the previous segment(s)/command(s) until a direction can be established</em>?
    </p>

    <p>If the marker is a <a>segment marker</a>, then
    the direction the marker is oriented is, if considering the
    incoming and outgoing directions as unit vectors, in the
    direction of the sum of these two vectors.  If this sum
    is zero, then the marker is oriented in the incoming direction.</p>

    <p>If the marker is on the first or last vertex of a closed subpath, then the
    incoming direction taken from the final path segment and the outgoing
    direction is taken from:</p>
    
    <ul>
      <li>the first path segment of the <em>following</em> subpath,
      if the following subpath does not begin with a
      <a href="paths.html#PathDataMovetoCommands">'moveto'</a> command, and</li>
      <li>the first path segment of the <em>current</em> subpath,
      if the following subpath does begin with a
      <a href="paths.html#PathDataMovetoCommands">'moveto'</a> command
      or if there is no following subpath.</li>
    </ul>
  </dd>
</dl>

<dl class="ready-for-wider-review">
  <dt><span class="attr-value">'auto-start-reverse'</span></dt>
  <dd>
    <p>A value of <span class="attr-value">'auto-start-reverse'</span>
    means the same as <span class="attr-value">'auto'</span> except that
    for a marker placed by 'marker-start', the orientation is 180°
    different from the orientation as determined by <span class="attr-value">'auto'</span>.</p>

    <p class="note">This allows a single arrowhead marker to be defined
    that can be used for both the start and end of a path, point in the right
    directions.</p>
  </dd>
</dl>

<dl>
  <dt><span class="attr-value"><a>&lt;angle&gt;</a></span></dt>
  <dt><span class="attr-value"><a>&lt;number&gt;</a></span></dt>
  <dd>
    <p>An <a>&lt;angle&gt;</a> value represents the angle the marker's
    positive x-axis makes with the positive x-axis in the user space
    of the <a>markable element</a>, and a <a>&lt;number&gt;</a> value
    with no unit represents an angle in degrees.  For example, if a value of
    <span class="attr-value">'0'</span> is given, then the marker will be drawn
    such that its x-axis will align with the x-axis of the user
    space of the graphic object referencing the marker.
    A value of <span class="attr-value">'90deg'</span> will result in the
    marker being drawn with its positive x-axis in the direction
    of the positive y-axis of the <a>markable element</a>'s user space.</p>
  </dd>
</dl>

<p>The orientation occurs after the marker has been fitted into its
viewport.  See the <a href="#MarkerAlgorithm">Details on how markers are rendered</a>
section below for an illustrative example.</p>

</dd>

<dt>
<table class="propdef attrdef">
  <tr>
    <th>Name</th>
    <th>Value</th>
    <th>Lacuna value</th>
    <th>Animatable</th>
  </tr>
  <tr>
    <td><dfn id="PositionAttribute">position</dfn></td>
    <td><a>&lt;length&gt;</a> | <a>&lt;percentage&gt;</a> | <a>&lt;number&gt;</a></td>
    <td>as&#160;if&#160;not&#160;specified</td>
    <td>yes</td>
  </tr>
</table>

</dt>
<dd>
<p>If the <a element>marker</a> element is a child of a <a>markable element</a>,
then the presence of a <a>'position'</a> attribute indicates that the marker is
a <a>positioned marker</a> and that it will be painted at the specified
distance along the path.  If the value is negative or greater than the length
of the path, then no marker will be painted.  If this attribute is specified on
a <a element>marker</a> that is not a child of a <a>markable element</a>, then
it has no effect beyond being exposed in the DOM.</p>

<p class="issue">Should a negative or greater than path length value be
an "in error" / "unsupported" value?</p>

</dd>
<dt>

<table class="propdef attrdef">
  <tr>
    <th>Name</th>
    <th>Value</th>
    <th>Lacuna value</th>
    <th>Animatable</th>
  </tr>
  <tr>
    <td><dfn id="HrefAttribute">href</dfn></td>
    <td>URL <a href="types.html#attribute-url" class="syntax">[URL]</a></td>
    <td>as&#160;if&#160;not&#160;specified</td>
    <td>yes</td>
  </tr>
</table>

</dt>
<dd>
<p>When a <a element>marker</a> element is being used as a <a>positioned marker</a>,
the <a>'href'</a> attribute indicates that the <a element>marker</a>
referenced by the attribute is to be used as the definition of the marker.  The
graphical content of the referencing <a element>marker</a> element and any of
its attributes that affect marker processing are ignored.  Authors must not
place any child graphical content in the referencing <a element>marker</a> or
specify the <a>'viewBox'</a>, <a>'preserveAspectRatio'</a>, <a>'refX'</a>,
<a>'refY'</a>, <a>'markerUnits'</a>, <a>'markerWidth'</a>, <a>'markerHeight'</a>
or <a>'orient'</a> attributes on it.</p>

<p class="issue">We should say something about referencing <a element>marker</a>
elements that have an <a>'href'</a> with the <a>marker properties</a>.
I suspect we should just allow this.  Whether we want to allow the full
element-referencing thing that you can do with gradients, with selective
overriding of attributes, I'm not sure.</p>

</dd>
</dl>

<!--
<style>
hr.break { border: none; margin: 2em 0 }
hr.break:before { display: block; text-align: center; content: "*\a0\a0\a0\a0*\a0\a0\a0\a0*"; }
</style>
<hr class="break"/>
-->

<p>The contents of the <a element>marker</a> are relative to a new
coordinate system. The <a>'markerUnits'</a> attribute determines an initial
scale factor for transforming the graphics in the marker into the user
coordinate system for the referencing element. An additional set of
transformations might occur if there is a <a>'viewBox'</a> attribute, in
which case the coordinate system for the contents of the <a element>marker</a>
will be transformed due to the processing of attributes <a>'viewBox'</a>
and <a>'preserveAspectRatio'</a>. If there is no <a>'viewBox'</a>
attribute, then the assumed default value for the the <a>'viewBox'</a>
attribute has the origin of the viewBox coincident with the origin
of the viewport and the width/height of the viewBox the same as the
width/height of the viewport.</p>

<p>The <a href="styling.html#UAStyleSheet">user agent style sheet</a> sets
the <a>'overflow'</a> property for <a element>marker</a> elements to
<span class="prop-value">hidden</span>, which causes a rectangular clipping
path to be created at the bounds of marker's viewport.  Unless the
<a>'overflow'</a> property is overridden, any graphics within the marker which
goes outside of the marker's viewport will be clipped.</p>

<p><a href="styling.html#SVGStylingProperties">Properties</a> inherit into the
<a element>marker</a> element from its ancestors; properties do <em>not</em>
inherit from the element referencing the <a element>marker</a> element.
<span class="ready-for-wider-review">Note however that by using the <span class="prop-value">context-stroke</span>
value for the <a>'fill'</a> or <a>'stroke'</a> on elements in its definition,
a single marker can be designed to match the style of the element referencing
the marker.</span></p>

<p><a element>marker</a> elements are only rendered directly
when they are used as children of a <a>markable element</a>
and have a <a>'position'</a> attribute specified.  This causes the
marker to be painted as a <a>positioned marker</a>.  All other
<a element>marker</a> elements are not rendered directly
and must be referenced by one of the <a>marker properties</a>
to be rendered.  The <a>'display'</a> property does not apply to the
<a element>marker</a> element; thus, <a element>marker</a> elements are not
directly rendered even if the <a>'display'</a> property is
set to a value other than <span class="prop-value">none</span>, and
<a element>marker</a> elements are available for referencing even when the
<a>'display'</a> property on the <a element>marker</a> element or any of its
ancestors is set to <span class="prop-value">none</span>.  <a element>marker</a>
elements that are used as <a>positioned markers</a> can simultaneously be referenced
by the <a href='#TermMarkerProperties'>marker properties</a> to be used as
<a>segment markers</a> and <a>repeating markers</a>.</p>

<p><a href="script.html#EventAttributes">Event attributes</a> and
<a href="svgdom.html#EventListeners">event listeners</a> attached
to the contents of a <a element>marker</a> element are not processed;
only the rendering aspects of <a element>marker</a> elements are
processed.</p>

<p class="issue">Make interaction work on <a>positioned markers</a>.</p>

<div class="example">
  <p>The following example shows the use of <a>positioned markers</a> to
  place symbols at particular distances along a path.</p>

  <pre><![CDATA[
<svg xmlns="http://www.w3.org/2000/svg"
     width="600" height="200" viewBox="0 0 600 200">

   <defs>
     <marker id="Square" markerWidth="10" markerHeight="10"
             refX="5" refY="5" orient="auto">
       <path d="M 5,1 L 9,5 5,9 1,5 z" fill="#6a9100"/>
     </marker>
     <marker id="Circle" markerWidth="10" markerHeight="10"
             refX="5" refY="5" orient="auto">
       <circle cx="5" cy="5" r="2" fill="dodgerblue"/>
     </marker>
   </defs>

   <path d="M 100,50 C 100,250 500,-50 300,150"
         fill="none" stroke="deeppink" stroke-width="3">
     <marker href="#Square" position="0"/>
     <marker href="#Square" position="100%"/>
     <marker href="#Circle" position="50px"/>
     <marker href="#Circle" position="calc(100% - 50px)"/>
     <marker refX="5" refY="5" position="50%">
       <!-- the cross -->
       <path d="M 3,3 L 7,7 M 3,7 L 7,3"
             fill="none" stroke="black" stroke-width="2"/>
     </marker>
   </path>
</svg>
]]></pre>

  <div class="figure">
    <img class="bordered" src="images/painting/markers-positioned.svg"
         alt="Image showing the use of positioned markers."/>
    <p class="caption">Child <a element>marker</a> elements are used to position
    two square and two circular markers.  The cross marker is defined inline
    and does not need an ID.</p>
  </div>
</div>

<h3 id="MarkerReferences">Referencing <span class="element-name">'marker'</span> elements</h3>

<p>A number of marker properties allow specifying a <a element>marker</a> using a <a>&lt;marker-ref&gt;</a> value.</p>

<div class="definition">
  <dfn id="DataTypeMarkerRef">&lt;marker-ref&gt;</dfn> =<br/>
  <div style="margin-left: 2em">
    <a>&lt;url&gt;</a> |<br/>
    child |<br/>
    <a>&lt;child-selector&gt;</a>
  </div>
</div>

<p>where:</p>

<div class="definition">
  <dfn id="DataTypeChildSelector">&lt;child-selector&gt;</dfn> =
  <div style="margin-left: 4em">select(<a>compound selector</a>#)</div>
</div>

<p>Values have the following meaning</p>

<dl>
  <dt><span class='prop-value'>&lt;url&gt;</span></dt>
  <dd>Indicates that the <a element>marker</a> element referenced
  by the <a>&lt;url&gt;</a> value will be used.
  If the <a href="linking.html#URLReference">URL reference</a> is not valid
  (e.g., it points to an object that is undefined or the object is not
  a <a element>marker</a> element), then the marker reference is also not
  valid.</dd>

  <dt><span class='prop-value'>child</span></dt>
  <dd>Indicates that the last child <a element>marker</a> element of the
  element where the property is specified will be used.
  If there is no such element, then the reference is not valid.</dd>

  <dt><span class='prop-value'>&lt;child-selector&gt;</span></dt>
  <dd>Indicates that the first matching descendent <a element>marker</a>
  specified by the <a>&lt;child-selector&gt;</a>, applied in the context of the
  element where the property is specified, will be used.
  If no element matches any of the selectors contained in the
  <a>&lt;child-selector&gt;</a>, or the first match is not a <a>'marker
  element'</a>, then the reference is not valid.</dd>
</dl>

<h3 id="VertexMarkerProperties">Vertex markers: the 'marker-start',
'marker-mid' and 'marker-end' properties</h3>

<pre class='propdef'>
Name: marker-start, marker-mid, marker-end
Value: none | <<marker-ref>>
Initial: none
Applies to: <a>markable elements</a>
Inherited: yes
Percentages: n/a
Computed value: as specified, but with <<url>> values (that are part of a <<marker-ref>>) made absolute
Media: visual
Animatable: yes
</pre>

The 'marker-start' and 'marker-end' properties are used
to specify the marker that will be drawn at the first and last vertices
of the given <a>markable element</a>, respectively.  'marker-mid'
is used to specify the marker that will be drawn at all other vertices
(i.e., every vertex except the first and last).
Possible values for 'marker-start', 'marker-mid' and
'marker-end' are:

<dl dfn-for="marker-start, marker-mid, marker-end" dfn-type=value>
  <dt><dfn>none</dfn></dt>
  <dd>Indicates that no marker symbol will be drawn at the given
  vertex or vertices.</dd>

  <dt><dfn>&lt;marker-ref></dfn></dt>
  <dd>Indicates that the <a element>marker</a> element referenced
  by the <<marker-ref>> value will be drawn at the given vertex or
  vertices.
  If the reference is not valid, then no marker will be drawn at the given
  vertex or vertices.</dd>
</dl>

For <a element>polygon</a> elements, the last vertex is the same as the first
vertex, and for <a element>path</a> elements that end with a closed subpath, the last
vertex is the same as the first vertex of that final subpath.
In this case, if the value of 'marker-end' is not
''marker-start/none'', then it is possible that two markers
will be rendered on that final vertex.

<p class="note">Note that 'marker-start' and 'marker-end'
refer to the first and last vertex of the entire path, not each subpath.</p>

<div class="ready-for-wider-review">
<div class="example">
  <p>The following example shows a triangular marker symbol used as a
  <a>vertex marker</a> to form an arrowhead at the end of two paths.</p>

  <edit:includefile href='images/painting/marker.svg'/>

  <div class="figure">
    <img class="bordered" src="images/painting/marker-rendering.svg"
         alt="Image showing the use of an automatically oriented marker."/>
    <p class="caption">The triangle is placed at the end of the path and
    oriented automatically so that it points in the right direction.
    The use of <span class="prop-value">context-stroke</span> ensures
    the fill of the triangle matches the stroke of each <a element>path</a>.</p>
  </div>
</div>
</div>

<h2 id="SegmentMarkers">Segment markers: the 'marker-segment' property</h2>

<pre class='propdef'>
Name: marker-segment
Value: none | <<marker-ref>>
Initial: none
Applies to: <a>markable elements</a>
Inherited: yes
Percentages: n/a
Computed value: as specified, but with <<url>> values (that are part of a <<marker-ref>>) made absolute
Media: visual
Animatable: yes
</pre>

Note: New in SVG 2. Added to allow automatically placing marker symbols
on path edges, as is common in for example line graphs.

The 'marker-segment' property is used to specify the marker that will
be drawn at the center of each length path segment.  Possible values
are:

<dl dfn-type=value dfn-for="marker-segment">
  <dt><dfn>none</dfn></dt>
  <dd>Indicates that no marker symbol will be drawn at the given
  vertex or vertices.</dd>

  <dt><dfn>&lt;marker-ref></dfn></dt>
  <dd>Indicates that the <a element>marker</a> element referenced
  by the <a>&lt;marker-ref&gt;</a> value will be drawn at the center
  of each path segment.
  If the reference is not valid, then no marker will be drawn at the path
  segment centers.</dd>
</dl>

<div class="example">
  <p>The following example shows the use of both <a>vertex markers</a> and
  <a>segment markers</a> to construct a line graph.</p>

  <pre><![CDATA[
<svg xmlns="http://www.w3.org/2000/svg" width="400" height="200">

  <marker id="Circle" markerWidth="8" markerHeight="8" refX="4" refY="4"
          markerUnits="userSpaceOnUse">
    <circle cx="4" cy="4" r="3" fill="deeppink"/>
  </marker>

  <marker id="Cross" markerWidth="10" markerHeight="10" refX="0" refY="0"
          viewBox="-5 -5 10 10" markerUnits="userSpaceOnUse"
          fill="none">
    <path d="M -4,-4 L 4,4 M -4,4 L 4,-4" stroke="white" stroke-width="4"/>
    <path d="M -4,-4 L 4,4 M -4,4 L 4,-4" stroke="black" stroke-width="2"/>
  </marker>

  <!-- grid lines -->
  <path stroke="#888" d="M 40,20 360,20 M 40,40 360,40 M 40,60 360,60
                         M 40,80 360,80 M 40,100 360,100 M 40,120 360,120
                         M 40,140 360,140 M 40,160 360,160 M 40,180 360,180"/>

  <!-- the graph line -->
  <polyline points="50,100 100,20 150,50 200,130 250,80 300,170 350,100"
            fill="none" stroke="deeppink" stroke-width="2"
            marker="url(#Circle)" marker-segment="url(#Cross)"/>
</svg>
]]></pre>

  <div class="figure">
    <img class="bordered" src="images/painting/markers-segment.svg"
         alt="Image showing the use of segment markers."/>
    <p class="caption">Segment markers are used to place crosses at the center
    of each line segment in the line graph.</p>
  </div>
</div>

<h2 id="RepeatingMarkers">Repeating markers: the 'marker-pattern' property</h3>

<pre class='propdef'>
Name: marker-pattern
Value: <<marker-gap>>? <<marker-ref-group>> [ <<marker-gap>> <<marker-gap>> ]* <<marker-gap>>?
Initial: none
Applies to: <a>markable elements</a>
Inherited: yes
Percentages: n/a
Computed value: as specified, but with <<url>> values (that are part of a <<marker-ref>>) made absolute
Media: visual
Animatable: yes
</pre>

where:

<pre class=prod><dfn>&lt;marker-gap></dfn> = <<length>> | <<percentage>> | <<number>></pre>
<pre class=prod><dfn>&lt;marker-ref-group></dfn> = none | <<marker-ref>>+</pre>

Note: New in SVG 2. Added to allow markers to be placed along a path
at positions unrelated to the segments used to form the path.

The 'marker-pattern' property is used to specify a pattern
of markers and gaps to be repeated along the length of the <a>markable element</a>.
Values have the following meanings:

<dl>
  <dt><dfn>none</dfn></dt>
  <dd>Indicates that no marker will be painted at the current
  position along the path.</dd>

  <dt><<marker-gap>></dt>
  <dd>Indicates the length of a gap in the repeated
  pattern of markers.</dd>

  <dt><<marker-ref>></dt>
  <dd>A reference to a <a element>marker</a> that will be placed at the
  current position along the path.  If the reference is not valid, then no
  marker for that <<marker-ref>> will be painted.</dd>
</dl>

If a value other than ''marker-pattern/none' is given,
and the sum of the <<length>>s, <<percentage>>s
and <<number>>s is not positive, then it is an <a>invalid value</a>.</p>

Unlike <a>vertex markers</a>, the orientation of an ''orient="auto"''
<a>repeating marker</a> that happens to lie on a vertex does not take into
account the incoming and outgoing directions.  Instead, it is simply oriented
such that its positive x-axis is aligned with the direction of the path
at its position.

<div class="example">
  <p>The following example shows the use of the 'marker-pattern' property
  to specify a repeating pattern of two different markers spaced along a
  path.</p>

  <pre><![CDATA[
<svg xmlns="http://www.w3.org/2000/svg" width="600" height="200">

  <marker id="DoubleDash" markerWidth="8" markerHeight="12" refX="0" refY="0"
          viewBox="-4 -6 8 12" markerUnits="userSpaceOnUse" orient="auto">
    <rect x="-3" y="-5" width="2" height="10"/>
    <rect x="1" y="-5" width="2" height="10"/>
  </marker>
  <marker id="SingleDash" markerWidth="4" markerHeight="12" refX="0" refY="0"
          viewBox="-2 -6 4 12" markerUnits="userSpaceOnUse" orient="auto">
    <rect x="-1" y="-5" width="2" height="10"/>
  </marker>

  <path d="M 50,100 S 100,132 150,86 200,173 250,76 300,81
                      350,136 400,87 450,166 500,87 550,96"
        stroke="deeppink" stroke-width="2" fill="none"
        marker-pattern="40 url(#DoubleDash) 40 url(#SingleDash)"/>
</svg>
]]></pre>

  <div class="figure">
    <img class="bordered" src="images/painting/markers-repeating.svg"
         alt="Image showing the use of repeating markers."/>
    <p class="caption">Markers specified with the 'marker-pattern' property
    are placed along the path at fixed distances, not relative to the path
    vertices.</p>
  </div>
</div>

<h2 id="MarkerShorthand">Marker shorthand: the 'marker' property</h2>

<pre class='propdef'>
Name: marker
Value: none
Initial: none
Applies to: <a>markable elements</a>
Inherited: no
Percentages: see individual properties
Computed value: see individual properties
Media: visual
Animatable: see individual properties
</pre>
      <!--<div>
        [ none | <a>&lt;marker-ref&gt;</a> ]{1,4}
        [ / <a class="property" href="#MarkerPatternProperty">&lt;‘marker-pattern’&gt;</a> ]?
      </div>
      <div style="margin-left: 2em">
        | <a>&lt;marker-ref&gt;</a>{0,4} [ <a>&lt;length&gt;</a> | <a>&lt;percentage&gt;</a> | <a>&lt;number&gt;</a> ] [ <a>&lt;length&gt;</a> | <a>&lt;percentage&gt;</a> | <a>&lt;number&gt;</a> | <a>&lt;marker-ref&gt;</a> ]*
      </div>-->

The 'marker' property sets values for the
'marker-start', 'marker-mid', 'marker-end',
'marker-segment' and 'marker-pattern' properties.
Values for have the following meanings:

<!--<dl>
  <dt><span class="prop-value">none | <a>&lt;marker-ref&gt;</a></span></dt>
  <dd>Sets 'marker-start', 'marker-mid' and 'marker-end'
  to the specified value, and sets 'marker-segment' and
  'marker-pattern' to <span class="prop-value">none</span>.</dd>

  <dt><span class="prop-value">[ none | <a>&lt;marker-ref&gt;</a> ]{2}</span></dt>
  <dd>Sets 'marker-start' and 'marker-end' to the two
  values specified, and sets 'marker-mid', 'marker-segment' and
  'marker-pattern' to <span class="prop-value">none</span>.</dd>

  <dt><span class="prop-value">[ none | <a>&lt;marker-ref&gt;</a> ]{3}</span></dt>
  <dd>Sets 'marker-start', 'marker-mid' and 'marker-end' to
  the three values specified, and sets 'marker-segment' and
  'marker-pattern' to <span class="prop-value">none</span>.</dd>
    
  <dt><span class="prop-value">[ none | <a>&lt;marker-ref&gt;</a> ]{4}</span></dt>
  <dd>Sets 'marker-start', 'marker-segment', 'marker-mid'
  and 'marker-end' to the four <a>&lt;marker-ref&gt;</a> values
  specified, and sets 'marker-pattern' to
  <span class="prop-value">none</span>.</dd>

  <dt><span class="prop-value">[ none | <a>&lt;marker-ref&gt;</a> ]{1,4} / <a class="property" href="#MarkerPatternProperty">&lt;‘marker-pattern’&gt;</a></span></dt>
  <dd>Sets 'marker-start', 'marker-segment', 'marker-mid'
  and 'marker-end' to the four <a>&lt;marker-ref&gt;</a> values
  specified before the slash, and sets 'marker-pattern' to
  the value after the slash.</dd>

  <dt>anything else</dt>
  <dd>Sets 'marker-start', 'marker-segment', 'marker-mid'
  and 'marker-end' to <span class="prop-value">none</span>,
  and sets 'marker-pattern' to the specified value.</dd>
</dl>

</edit:with>
</div>
<edit:with element='marker'>-->

<h2 id="MarkerKnockout">Knocking out the stroke: the 'marker-knockout-left' and 'marker-knockout-right' properties</h2>

ISSUE: The marker knockout properties are still under heavy development
and are subject to change. Feedback on how authors might prefer to specify marker
knockout shapes is welcome.

<pre class='propdef'>
Name: marker-knockout-left, marker-knockout-right
Value: <<knockout-offset>> | <<knockout-shape>> [ at <<knockout-offset>> ]?
Initial: 0
Applies to: <a element>marker</a>
Inherited: no
Percentages: ee prose
Computed value: as specified
Media: visual
Animatable: yes
</pre>

where:

<pre class=prod><dfn>&lt;knockout-offset></dfn> = <<length>> | <<percentage>> | <<number>></pre>

<pre class=prod><dfn>&lt;knockout-shape></dfn> =
		[ <<length>> | <<percentage>> | <<number>> ] inverted? circle |
		[ <<length>> | <<percentage>> | <<number>> ]{2} inverted? ellipse |
		[ <<length>> | <<percentage>> | <<number>> ]{1,2} inverted? [ rectangle | triangle ]
</pre>


Note: New in SVG 2.  Added to allow authors to specify
parts of a stroke that should be clipped away when a marker is
placed on a path.  This helps with arrowheads, where the stroke
must not be visible behind the pointy end, and with hollow markers
as seen in metro maps, where the center of a marker is transparent
and the stroke should not show through.

When specified on a <a element>marker</a> element, the
'marker-knockout-left' and 'marker-knockout-right' properties
together specify a shape to clip away when when painting the stroke of an
element that uses the marker.  'marker-knockout-left' specifies the
left side of the shape and 'marker-knockout-right' the right side.
These two sides are joined together with straight lines.

The <<knockout-offset>> part of the value, if specified,
is the offset from the marker position, outwards, along the tangent,
that the knockout shape side is placed at.  This is the <em>knockout shape
side position</em>.  If it is omitted, then the offset is assumed to be zero.
The value can be negative.  Percentage values refer to the width of the marker
contents viewport.

The <<knockout-shape>> part of the value, if specified,
is the left or right side of the knockout shape. Values have the
following meanings:

<dl>
  <dt>[ <<length>> | <<percentage>> | <<number>> ]{2} inverted? ellipse</dt>
  <dd>
    <p>The knockout shape side is an arc.  The lengths or percentages specified
    are the x-radius and y-radius of the ellipse from which the arc is taken.
    A length is interpreted as being in the marker contents coordinate system.
    If the first value is a percentage, then it refers to the width of the
    marker contents viewport, and if the second value is a percentage then
    it refers to the height of the marker contents viewport.</p>

    <p>If the ''inverted'' keyword is not specified,
    then the arc is constructed by placing the center of the ellipse at the knockout
    shape side position.  First we consider only the 180° arc of the ellipse which
    points in the direction of the start of the start of the path, if this is
    the left knockout shape side, or the end of the path if this is the right knockout
    shape side.  If the y-radius is less than or equal to half of the stroke width of
    the path the marker is on, then this 180° arc is the final knockout shape side.
    Otherwise, we intersect the arc with the two lines that are offset, by half
    of the stroke width, from the tangent to the marker orientation.
    The resulting arc with its start and end points on these two lines is the
    final knockout shape side.</p>

    <p>If the ''inverted'' keyword <em>is</em> specified,
    then the arc is constructed by placing the center of the ellipse at a distance
    of two times its x-radius along the tangent to the marker orientation,
    in the direction of the start of the path if this is the left knockout shape
    side, or the end of the path if this is the right knockout shape side.
    We consider only the 180° arc of the ellipse that is pointing in the opposite
    direction.  If the y-radius is less or equal to half of the stroke width
    of the path the marker is on, then this 180° arc is the final knockout shape
    side.  Otherwise, we intersect the arc with the two lines that are offset,
    by half of the stroke width, from the tangent to the marker orientation.
    The resulting arc with its side and end points on these two lines
    is the final knockout shape side.</p>
  </dd>

  <dt>[ <<length>> | <<percentage>> | <<number>> ] inverted? circle</dt>
  <dd>
    <p>The knockout shape side is an arc.  The shape is computed in the same
    way as the ''ellipse'' shape, but with
    both radii of the ellipse being the specified length or percentage,
    and with a percentage referring to the size of the marker contents viewport.</p>
  </dd>

  <dt><span class="prop-value">[ <a>&lt;length&gt;</a> | <a>&lt;percentage&gt;</a> | <a>&lt;number&gt;</a> ]{1,2} inverted? rectangle</span></dt>
  <dd>
    <p>The knockout shape side comprises one or two rectangles.  These
    rectangles are aligned such that their top and bottom edges are
    parallel to the tangent to the marker orientation.
    The length or percentage is a width and the second, if specified,
    is a height.  Percentage values here refer to the width and height
    of the marker contents viewport, respectively.</p>

    <p>If the <span class="prop-value">inverted</span> keyword is not specified,
    then the knockout shape side is a single rectangle.  The width of the
    rectangle is the specified width value.  The height of the rectangle is the maximum
    of the stroke width of the path on which the marker exists and the specified
    height value, if it is specified.  If it is not specified, then the height of the
    rectangle is just the stroke width.
    The rectangle is posisioned such that the center of its right hand edge
    is positioned at the knockout shape side position
    and the extent of its width is in the direction of the start of the path,
    if this is the left knockout shape side, or the end of the path if this
    is the right knockout shape side.</p>

    <p>If the <span class="prop-value">inverted</span> keyword is specified,
    then the knockout shape side comprises two rectangles.  If the specified
    height is greater than or equal to the stroke width, then the height
    of these rectangles is zero; otherwise, their heights are half of the
    difference between the stroke width and the specified height.  The
    top edge of one of the rectangles is half of the stroke width away
    from the marker orientation tangent line, with its bottom edge closer to the tangent line.
    The other rectangle has its bottom edge half of the stroke width
    away from the tangent line and its top edge closer to the tangent line.
    The right edges of the rectangles are aligned with each other and
    also with the line perpendicular to the marker orientation tangent line.
    The extent of the widths of the rectangles is in the direction
    of the start of the path, if this is the left knockout shape side,
    or the end of the path if this is the right knockout shape side.</p>
  </dd>

  <dt>[ <<length>> | <<percentage>> | <<number>> ]{1,2} inverted? [ rectangle | triangle ]</dt>
  <dd>
    <p>The knockout shape side comprises one or two rectangles.  These
    rectangles are aligned such that their top and bottom edges are
    parallel to the tangent to the marker orientation.
    The length or percentage is a width and the second, if specified,
    is a height.  Percentage values here refer to the width and height
    of the marker contents viewport, respectively.</p>

    <p>If the ''inverted'' keyword is not specified,
    then the knockout shape side is a single rectangle.  The width of the
    rectangle is the specified width value.  The height of the rectangle is the maximum
    of the stroke width of the path on which the marker exists and the specified
    height value, if it is specified.  If it is not specified, then the height of the
    rectangle is just the stroke width.
    The rectangle is positioned such that the center of its right hand edge
    is positioned at the knockout shape side position
    and the extent of its width is in the direction of the start of the path,
    if this is the left knockout shape side, or the end of the path if this
    is the right knockout shape side.</p>

    <p>If the <span class="prop-value">inverted</span> keyword is specified,
    then the knockout shape side comprises two rectangles.  If the specified
    height is greater than or equal to the stroke width, then the height
    of these rectangles is zero; otherwise, their heights are half of the
    difference between the stroke width and the specified height.  The
    top edge of one of the rectangles is half of the stroke width away
    from the marker orientation tangent line, with its bottom edge closer to the tangent line.
    The other rectangle has its bottom edge half of the stroke width
    away from the tangent line and its top edge closer to the tangent line.
    The right edges of the rectangles are aligned with each other and
    also with the line perpendicular to the marker orientation tangent line.
    The extent of the widths of the rectangles is in the direction
    of the start of the path, if this is the left knockout shape side,
    or the end of the path if this is the right knockout shape side.</p>
  </dd>

  <dt>[ <a>&lt;length&gt;</a> | <a>&lt;percentage&gt;</a> | <a>&lt;number&gt;</a> ]{1,2} inverted? triangle</dt>
  <dd>
    <p class="issue">...</p>
  </dd>
</dl>

ISSUE: A diagram showing the construction of these shapes
would be helpful.

ISSUE: Need to define how the two shape sides are joined together.
It's taking the top and bottom points from both shapes, drawing vertical
lines to the edge of the stroke shape, then drawing two horizontal lines
to join them together.

The two knockout shape sides must not intersect, although they may
touch.  If they do intersect, then no knockout is performed for that
marker when painting the stroke.

Note: For example, using ''8px inverted triangle at -4px'' for 'marker-knockout-left' and
''8px triangle'' for 'marker-knockout-right'
is allowed, as the two straight lines that form the left shape side do not intersect
with either of the two straight lines that form the right shape side.
However, using ''8px triangle at -4px'' for
both properties would obviously cause an intersection, and so would not
be allowed.</p>

<div class="figure">
  <img class="bordered" src="images/painting/knockout-shapes.svg" style="max-width: none"
       alt="Image showing various marker knockout shapes."/>
  <p class="caption">An illustration of the use of inverted and non-inverted circle,
  rectangle and triangle knockout shapes, at both 0px and 10px offsets.
  The value beneath each pink stroke is used for both 'marker-knockout-left'
  and 'marker-knockout-right'.  (The marker itself here has no
  content and does not render anything.)</p>
</div>

<div class="issue">
  <p>While this is nice for straight line segments, if the
  path is curved at the marker position then it might be preferable to
  have the knockout shapes aligned with the tangent at the knockout shape
  side position, rather than with the marker orientation.  Especially
  if the knockout is being used as a fancy dash pattern.  Then we would
  likely want to join the left and right sides of the shape with a curved
  shape (along the stroke) and not just a rectangle.  If we allow this,
  then computing that shape is going to be hard, and will mean that
  determining whether the left and right sides of the knockout shape
  intersect, and determining what the intersections of all of the knockout shapes
  on a path are, is also going to be hard.  Perhaps that can be handled by
  extending dashing line caps with these shapes rather than here?  Regardless of
  whether it is handled by marker knockouts or new line caps, it's going
  to be non-trivial to compute the right shapes.</p>

  <p>Another thing to note is that knockouts here are like setting up
  a clipping path to remove parts of the stroke when it's painted.  That
  means that if the stroke intersects itself over the knockout areas,
  it's going to be knocked out of all bits of the stroke that go
  through those areas.  That may or may not be fine depending on
  your use cases.</p>
</div>